class Venda(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    evento_id = db.Column(db.Integer, db.ForeignKey('evento.id'), nullable=False)
    cliente_id = db.Column(db.Integer, db.ForeignKey('cliente.id'), nullable=True)
    usuario_id = db.Column(db.Integer, db.ForeignKey('usuario.id'), nullable=False)
    data_venda = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)
    total = db.Column(db.Float, nullable=False)
    forma_pagamento = db.Column(db.String(50), nullable=False)
    status = db.Column(db.String(20), nullable=False, default='ativa')
    data_cancelamento = db.Column(db.DateTime, nullable=True)
    usuario_cancelamento_id = db.Column(db.Integer, db.ForeignKey('usuario.id'), nullable=True)
    itens = db.relationship('ItemVenda', backref='venda', lazy=True)
    evento = db.relationship('Evento', backref='vendas')
    cliente = db.relationship('Cliente', backref='vendas')
    usuario = db.relationship('Usuario', foreign_keys=[usuario_id], backref='vendas')
    usuario_cancelamento = db.relationship('Usuario', foreign_keys=[usuario_cancelamento_id], backref='vendas_canceladas') 